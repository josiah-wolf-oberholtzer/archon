# -*- coding: utf-8 -*-
"""archon_query.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MjxPdQkhWjJzvn-bL3pioeeQ4YA-CERo
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import json as json
import os, os.path
from scipy.spatial.distance import pdist

destination_db = "/content/drive/My Drive/IRCMS_GAN_collaborative_database/Experiments/colab-violingan/archon-analysis/" #@param {type:"string"}

analysis_filename = "/content/drive/My Drive/analysis_f.json" #@param {type:"string"}
trial_filename = "/content/drive/My Drive/trial.json" #@param {type:"string"}

## IMPORT JSON FILE
def json_load (filename):
  f = open(filename)
  l = json.load(f)
  return l

def closest_node(input_db, comparative_db):

    in_ = json_load(input_db)
    db_ = json_load(comparative_db)

    flatscl = 100000.0
    min_ = "init"
    result_ = "error"

    for entry in in_:

      for k, v in entry.items():

        sample = v

        ip = sample.get("pitch")
        im = [
              float(
                  sample.get("cent")), 
              float(
                  sample.get("flat")) * flatscl, 
              float(
                  sample.get("rolloff"))]


    for entry in db_:

      for k, v in entry.items():

        sample_ = v
        if (ip == sample_.get("pitch")):

          cm = [
                float(
                    sample_.get("cent")), 
                float(
                    sample_.get("flat")) * flatscl, 
                float(
                    sample_.get("rolloff"))]
          dist = pdist([im, cm], metric = 'euclidean')[0]

          if (min_ == "init"): min_ = dist
          if (dist < min_):
            min_ = dist
            result_ = ("distance: " + str(dist) + ", file: " + k)
    
    return result_

x = closest_node(trial_filename, analysis_filename)
print(x)